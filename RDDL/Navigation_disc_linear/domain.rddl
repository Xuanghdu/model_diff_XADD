////////////////////////////////////////////////////////////////////
//Simple 2D navigaiton with discrete actions
//
////////////////////////////////////////////////////////////////////
domain navigation_discrete {

    requirements = {
        reward-deterministic
    };

    types {
		agent : object;
	}; 

    pvariables {


        // minerals constants
        GOAL-POS-X(agent): { non-fluent, real, default = 10 };            // goal x location
        GOAL-POS-Y(agent): { non-fluent, real, default = 10 };            // goal y location
        MAX-POS-X(agent): { non-fluent, real, default = 10 };            // goal x location
        MAX-POS-Y(agent): { non-fluent, real, default = 10 };            // goal y location
        MOVE-DISTANCE(agent) : { non-fluent, real, default = 1 };              

        // states
        pos-x(agent)    : { state-fluent, real, default = 0 };          // rover x position
        pos-y(agent)    : { state-fluent, real, default = 0 };          // rover y position

        // actions
        move-pos-x(agent)     : { action-fluent, bool, default = false };     // force input in y direction
        move-pos-y(agent)      : { action-fluent, bool, default = false };     // force input in x direction
        do-nothing(agent)     : { action-fluent, bool, default = false };     // force input in x direction

       
    };

    cpfs {

        pos-x'(?a) =  if ((move-pos-x(?a)) ^ ([pos-x(?a) + MOVE-DISTANCE(?a)] <  MAX-POS-X(?a)))
                        then pos-x(?a) + MOVE-DISTANCE(?a)
                      else pos-x(?a);

        pos-y'(?a) =  if ((move-pos-y(?a)) ^ ([pos-y(?a) + MOVE-DISTANCE(?a)] < MAX-POS-Y(?a)))
                        then pos-y(?a) + MOVE-DISTANCE(?a)
                      else pos-y(?a);
    };

    // negative distance to the goal
    reward = -sum_{?a : agent}[abs[(GOAL-POS-X(?a) - pos-x(?a))] + abs[(GOAL-POS-Y(?a) - pos-y(?a))]];

    state-invariants {
    };

    action-preconditions {
    forall_{?a : agent} [(move-pos-x(?a) + move-pos-y(?a) + do-nothing(?a)) <= 1];
    };

}
